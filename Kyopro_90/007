ABC 競技プログラミング塾には N 個のクラスがあり、番号 i (1≤i≤N) のクラスはレーティング Ai の生徒を対象としています。

今、Q 人の生徒がこの塾に入塾しようとしています。 番号 j (1≤j≤Q) の生徒のレーティングは Bj です。 各生徒は自分に合わないレベルのクラスに行くと不満になります。 
各生徒について、その不満度は次のように定義されます。

対象レーティング a と自分のレーティング b の差の絶対値、すなわち ∣a−b∣
j=1,2,3,…,Q それぞれについて、番号 j の生徒の不満度として考えられる最小値を求めてください。 ただし、1 人も入らないクラス、複数人から成るクラスがあっても良いものとします。
---------------------------------------------------------------------------
思路 二分查找
遍历比较的话，时间大概是300000 * 300000 大于10^8 不太行
所以用二分查找 时间复杂度直接变成log(n)；

import java.util.*;

public class Kyopro_007 {
    public static void main(String[] args){
        Scanner input = new Scanner(System.in);
        int N = input.nextInt();
        int[] A = new int[N];
        for(int i = 0; i < N; i++){
            A[i] = input.nextInt();
        }
        int Q = input.nextInt();
        int[] B = new int[Q];
        for(int i = 0; i < Q; i++){
            B[i] = input.nextInt();
        }
        input.close();

        Arrays.sort(A);

        for(int i = 0; i < Q; i++){
            System.out.println(binarySearch(B[i], A));
        }


    }

    public static int binarySearch(int key, int[] A){
        int lo = 0;
        int hi = A.length - 1;
        int mid = (A.length - 1) / 2;
        int res = Integer.MAX_VALUE;
        while (lo <= hi){
            res = Math.min(Math.abs(key - A[mid]), res);
            if(key > A[mid]) lo = mid + 1;
            else {
                hi = mid - 1;
            }
            mid = lo + (hi - lo)/2;
        }
        return res;
    }
}
